[
 {shards_bench, [
   {module, mnesia},             % {module, ets | shards | mnesia}
   {log_time, 10000},            % period to print out statistics
   {n_executions, [[insert]]},   % set of operation per execution
   {rand_keys, true},            % defines if keys are generated random or not (default is 'true').
   {opts, #{
     pool_size  => 8,            % number of shards
     concurrecy => 1000,         % number of processes to be spawned
     intensity  => 1000,         % number of times that operation is executed (per process). Use 'infinity' for infinite loop.
     period     => 100           % period between executed operations, like a delay (per process)
   }}
 ]},

 %% LAGER
 {lager, [
   {colored, true},
   {async_threshold, 200},
   {async_threshold_window, 5},
   {error_logger_hwm, 500},
   {handlers, [
     {lager_console_backend, [
       info,
       {lager_default_formatter, [
         color,
         time,
         " [", pid, "] ", message, "\e[0m\n"
       ]}
     ]},
     {lager_file_backend, [
       {file, "log/mnesia_bench.log"},
       {level, critical},
       {size, 0},
       {date, ""},
       {count, 5},
       %{async_threshold, 20},
       %{async_threshold_window, 5},
       {formatter, lager_default_formatter},
       {formatter_config, [message, "\n"]}
     ]}
   ]}
 ]}
].
